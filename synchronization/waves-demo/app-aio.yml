# Schema Migration Job
apiVersion: batch/v1
kind: Job
metadata:
  name: schema-migration-job
  namespace: app-namespace
spec:
  template:
    spec:
      containers:
      - name: schema-migrator
        image: nginx:alpine
        command: ["/bin/sh", "-c", "echo 'Running schema migration...'; sleep 10; echo 'Schema migration complete.'"]
      restartPolicy: Never
  backoffLimit: 2
---
# Namespace for the application
apiVersion: v1
kind: Namespace
metadata:
  name: app-namespace
---
# Data Migration Job
apiVersion: batch/v1
kind: Job
metadata:
  name: data-migration-job
  namespace: app-namespace
spec:
  template:
    spec:
      containers:
      - name: data-migrator
        image: nginx:alpine
        command: ["/bin/sh", "-c", "echo 'Running data migration...'; sleep 10; echo 'Data migration complete.'"]
      restartPolicy: Never
  backoffLimit: 2
---
# Frontend Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: app-namespace
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend-container
        image: nginx:alpine
        ports:
        - containerPort: 80
---
# Frontend Application Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: app-namespace
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
# PostgreSQL Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: app-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql-container
        image: nginx:alpine
        ports:
        - containerPort: 80
---
# PostgreSQL Database Service
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: app-namespace
spec:
  selector:
    app: postgresql
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
# Cleanup Job
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup-job
  namespace: app-namespace
spec:
  template:
    spec:
      containers:
      - name: cleaner
        image: nginx:alpine
        command: ["/bin/sh", "-c", "echo 'Performing post-sync cleanup...'; sleep 5; echo 'Cleanup complete.'"]
      restartPolicy: Never
  backoffLimit: 1
